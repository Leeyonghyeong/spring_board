<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd">
        
        
	<http auto-config="true" use-expressions="true">
		<!-- csrf 설정 -->
		<csrf disabled="false"></csrf>
		
		<!-- 페이지 권한 설정 -->
	    <intercept-url pattern="/delete" access="hasAnyRole('ROLE_USER', 'ROLE_MEMBER', 'ROLE_ADMIN')"/>
	    <intercept-url pattern="/register/**" access="hasAnyRole('ROLE_USER', 'ROLE_MEMBER', 'ROLE_ADMIN')" />
	    <intercept-url pattern="/update/**" access="hasAnyRole('ROLE_USER', 'ROLE_MEMBER', 'ROLE_ADMIN')" />
	    <intercept-url pattern="/**" access="permitAll" />
	    
	    <!-- login페이지 custom -->
	    <form-login
	    	username-parameter="id"
	    	password-parameter="pw"
	    	login-processing-url="/login"
	    	login-page="/login"
	    	default-target-url="/"	    	
	    />
	    
	    <!-- logout custom -->
	    <logout
	    	logout-url="/logout"
	    	logout-success-url="/"
	    	invalidate-session="true"
	    />
	    
	    <!-- 403페이지 custom -->
	    <!-- <access-denied-handler
	    	error-page="/denied_page"
	    />-->
	    
	    <!-- session 설정 -->
	    <session-management invalid-session-url="/" >
	    	<concurrency-control 
	    		error-if-maximum-exceeded="true"
	    		max-sessions="10"
	    	/>
	    </session-management>
	    
	    
	    
	</http>
	
	<!-- DB사용자 설정 확인 
	<jdbc-user-service data-source-ref="dataSource" id="loginCheck"
		users-by-username-query="SELECT userid as userid, password as userpw, enabled FROM user WHERE userid = ?"
		authorities-by-username-query="SELECT userid as userid, authority FROM user WHERE userid = ?"
	/>
	--> 
	
	<authentication-manager>
	    <!-- <authentication-provider user-service-ref="userService">
	        <user-service>
	            <user name="user" password="userPw" authorities="ROLE_USER"/>
	            <user name="guest" password="guest" authorities="ROLE_GUEST"/>
	        </user-service>
	    </authentication-provider>
	        -->
	        
	    <authentication-provider ref="authProvider">
	    </authentication-provider>
	        
	</authentication-manager>
	
	<!-- userDetail Service -->
	<beans:bean id="userService" class="org.spring.security.CustomUserDetailService"></beans:bean>
	
	<!-- authenticationProvider Service -->
	<beans:bean id="authProvider" class="org.spring.security.CustomAuthenticationProvider"></beans:bean>
	
	<!-- 패스워드 암호화 설정 -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
    
</beans:beans>